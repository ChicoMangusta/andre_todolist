{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/IndividualProject.js\";\nimport React, { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\nimport { firebase } from '../firebase';\nexport const IndividualProject = ({\n  project\n}) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const {\n    projects,\n    setProjects\n  } = useProjectsValue();\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n\n  const deleteProject = docId => {\n    firebase.firestore().collection('projects') //database\n    .doc(docId).delete().then(() => {\n      //afetr deleted...\n      setProjects([...projects]); //...reset the project...\n\n      setSelectedProject('INBOX'); //...go back to firebase and grab a new project and reset it, (gets the code from index.js from hooks and re-render) \n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sidebar__dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"\\u2022\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sidebar__project-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, project.name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sidebar__project-delete\",\n    \"data-testid\": \"delete-project\",\n    onClick: () => setShowConfirm(!showConfirm) // onKeyDown={(e) => {\n    //   if (e.key === 'Enter') setShowConfirm(!showConfirm);\n    // }}\n    // tabIndex={0}\n    // role=\"button\"\n    // aria-label=\"Confirm deletion of project\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaTrashAlt, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), showConfirm && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-delete-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"project-delete-modal__inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Are u sure u wanna delete this project?\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => deleteProject(project.docId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => setShowConfirm(!showConfirm),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, \"Cancel\")))));\n};","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/IndividualProject.js"],"names":["React","useState","FaTrashAlt","useProjectsValue","useSelectedProjectValue","firebase","IndividualProject","project","showConfirm","setShowConfirm","projects","setProjects","setSelectedProject","deleteProject","docId","firestore","collection","doc","delete","then","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,gBAAT,EAA2BC,uBAA3B,QAA0D,YAA1D;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM;AAAES,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BR,gBAAgB,EAAlD;AACA,QAAM;AAAES,IAAAA;AAAF,MAAyBR,uBAAuB,EAAtD;;AAEE,QAAMS,aAAa,GAAIC,KAAD,IAAW;AACjCT,IAAAA,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,UAFd,EAE0B;AAF1B,KAGGC,GAHH,CAGOH,KAHP,EAIGI,MAJH,GAKGC,IALH,CAKQ,MAAM;AAAE;AACZR,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX,CADU,CACkB;;AAC5BE,MAAAA,kBAAkB,CAAC,OAAD,CAAlB,CAFU,CAEmB;AAC9B,KARH;AASD,GAVC;;AAYF,sBACM,uDACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,IAAA,SAAS,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCL,OAAO,CAACa,IAAjD,CAFF,eAGE;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,mBAAY,gBAFd;AAGE,IAAA,OAAO,EAAE,MAAMX,cAAc,CAAC,CAACD,WAAF,CAH/B,CAIE;AACA;AACA;AACA;AACA;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,EAaIA,WAAW,iBACT;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMK,aAAa,CAACN,OAAO,CAACO,KAAT,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAIQ;AAAM,IAAA,OAAO,EAAE,MAAML,cAAc,CAAC,CAACD,WAAF,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR,CADJ,CAdN,CAHF,CADN;AA+BD,CAhDM","sourcesContent":["import React, { useState } from 'react';\nimport { FaTrashAlt } from 'react-icons/fa';\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\nimport { firebase } from '../firebase'\n\n\nexport const IndividualProject = ({ project }) => {\n  const [showConfirm, setShowConfirm] = useState(false);\n  const { projects, setProjects } = useProjectsValue();\n  const { setSelectedProject } = useSelectedProjectValue();\n\n    const deleteProject = (docId) => {\n    firebase\n      .firestore() \n      .collection('projects') //database\n      .doc(docId)\n      .delete()\n      .then(() => { //afetr deleted...\n        setProjects([...projects]); //...reset the project...\n        setSelectedProject('INBOX'); //...go back to firebase and grab a new project and reset it, (gets the code from index.js from hooks and re-render) \n      });\n  }\n  \n  return (\n        <>\n          <span className=\"sidebar__dot\">â€¢</span>\n          <span className=\"sidebar__project-name\">{project.name}</span>\n          <span\n            className=\"sidebar__project-delete\"\n            data-testid=\"delete-project\"\n            onClick={() => setShowConfirm(!showConfirm)}\n            // onKeyDown={(e) => {\n            //   if (e.key === 'Enter') setShowConfirm(!showConfirm);\n            // }}\n            // tabIndex={0}\n            // role=\"button\"\n            // aria-label=\"Confirm deletion of project\"\n          >\n            <FaTrashAlt />   \n            \n            { showConfirm && (\n                <div className=\"project-delete-modal\">\n                    <div className=\"project-delete-modal__inner\">\n                        <p>Are u sure u wanna delete this project?</p>\n                        <button type=\"button\" onClick={() => deleteProject(project.docId)}>Delete</button> \n\n                            <span onClick={() => setShowConfirm(!showConfirm)}>Cancel</span>\n                    </div>\n                </div>\n            )}\n          </span>\n        </>\n  )\n\n};"]},"metadata":{},"sourceType":"module"}