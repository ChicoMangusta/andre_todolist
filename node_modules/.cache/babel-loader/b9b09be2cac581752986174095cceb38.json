{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Tasks.js\";\n//TASKS\nimport React from 'react';\nimport { Checkbox } from './Checkbox';\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nexport const Tasks = () => {\n  const {\n    tasks\n  } = useTasks(selectedProject);\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  let projectName = '';\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (projects && selectedProject && !collatedTasksExist(selectedProject)) {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    \"data-testid\": \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"project-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, projectName), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tasks__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: `${task.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, task.task)))));\n};","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Tasks.js"],"names":["React","Checkbox","useTasks","collatedTasks","getTitle","getCollatedTitle","collatedTasksExist","useSelectedProjectValue","useProjectsValue","Tasks","tasks","selectedProject","projects","projectName","name","map","task","id"],"mappings":";AAAC;AAED,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,EAAmBC,gBAAnB,EAAqCC,kBAArC,QAA+D,YAA/D;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AAGC,OAAO,MAAMC,KAAK,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAYR,QAAQ,CAACS,eAAD,CAA1B;AACA,QAAM;AAAEA,IAAAA;AAAF,MAAsBJ,uBAAuB,EAAnD;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAeJ,gBAAgB,EAArC;AAGD,MAAIK,WAAW,GAAG,EAAlB;;AAEA,MAAIP,kBAAkB,CAACK,eAAD,CAAlB,IAAuCA,eAA3C,EAA4D;AAC1DE,IAAAA,WAAW,GAAGR,gBAAgB,CAACF,aAAD,EAAgBQ,eAAhB,CAAhB,CAAiDG,IAA/D;AACD;;AAED,MAAKF,QAAQ,IAAID,eAAZ,IAA+B,CAACL,kBAAkB,CAACK,eAAD,CAAvD,EAA0E,CAEzE;;AAGF,sBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,mBAAY,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCE,WAAhC,CADF,eAGE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT;AAAI,IAAA,GAAG,EAAG,GAAEA,IAAI,CAACC,EAAG,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAED,IAAI,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAI,CAACA,IAAZ,CAFF,CADD,CADH,CAHF,CADD;AAcF,CA/BO","sourcesContent":[" //TASKS\n \nimport React from 'react';\nimport { Checkbox } from './Checkbox'\nimport { useTasks } from '../hooks';\nimport { collatedTasks } from '../constants';\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\n\n\n export const Tasks = () => {\n     const { tasks } = useTasks(selectedProject);\n     const { selectedProject } = useSelectedProjectValue();\n     const { projects } = useProjectsValue();\n\n\n    let projectName = '';\n\n    if (collatedTasksExist(selectedProject) && selectedProject) {\n      projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n    }\n\n    if ( projects && selectedProject && !collatedTasksExist(selectedProject)) {\n      \n    }\n\n\n   return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      <ul className=\"tasks__list\">\n        {tasks.map((task) => (\n          <li key={`${task.id}`}>\n            <Checkbox id={task.id} />\n            <span>{task.task}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}