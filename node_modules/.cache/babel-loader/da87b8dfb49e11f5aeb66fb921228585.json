{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/context/selected-project-context.js\";\nimport React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({\n  children\n}) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n  return /*#__PURE__*/React.createElement(SelectedProjectContext.Provider, {\n    value: {\n      selectedProject,\n      setSelectedProject\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext); // SelectedProjectProvider.propTypes = {\n//   children: PropTypes.node.isRequired,\n// };","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","PropTypes","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","useSelectedProjectValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,aAAa,EAA5C;AACP,OAAO,MAAMK,uBAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACvD,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,OAAD,CAAtD;AAEA,sBACE,oBAAC,sBAAD,CAAwB,QAAxB;AACE,IAAA,KAAK,EAAE;AAAEK,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGF,QAHH,CADF;AAOD,CAVM;AAYP,OAAO,MAAMG,uBAAuB,GAAG,MAAMR,UAAU,CAACG,sBAAD,CAAhD,C,CAEP;AACA;AACA","sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({ children }) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return (\n    <SelectedProjectContext.Provider\n      value={{ selectedProject, setSelectedProject }}\n    >\n      {children}\n    </SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\n\n// SelectedProjectProvider.propTypes = {\n//   children: PropTypes.node.isRequired,\n// };"]},"metadata":{},"sourceType":"module"}