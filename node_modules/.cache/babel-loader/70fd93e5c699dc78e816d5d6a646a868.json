{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/context/selected-project-context.js\";\nimport React, { createContext, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({\n  children\n}) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n  return /*#__PURE__*/React.createElement(SelectedProjectContext.Provider, {\n    value: {\n      selectedProject,\n      setSelectedProject\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, children, \" \");\n};\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\nSelectedProjectProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/context/selected-project-context.js"],"names":["React","createContext","useContext","useState","PropTypes","SelectedProjectContext","SelectedProjectProvider","children","selectedProject","setSelectedProject","useSelectedProjectValue","propTypes","node","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IACEC,aADF,EAEEC,UAFF,EAGEC,QAHF,QAIO,OAJP;AAKA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,sBAAsB,GAAGJ,aAAa,EAA5C;AACP,OAAO,MAAMK,uBAAuB,GAAG,CAAC;AACtCC,EAAAA;AADsC,CAAD,KAEjC;AACJ,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,OAAD,CAAtD;AAEA,sBAAS,oBACP,sBADO,CACgB,QADhB;AACyB,IAAA,KAAK,EACnC;AACEK,MAAAA,eADF;AAEEC,MAAAA;AAFF,KAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQLF,QARK,MAAT;AAYD,CAjBM;AAmBP,OAAO,MAAMG,uBAAuB,GAAG,MAAMR,UAAU,CAACG,sBAAD,CAAhD;AAEPC,uBAAuB,CAACK,SAAxB,GAAoC;AAClCJ,EAAAA,QAAQ,EAAEH,SAAS,CAACQ,IAAV,CAAeC;AADS,CAApC","sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useState\n} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SelectedProjectContext = createContext();\nexport const SelectedProjectProvider = ({\n  children\n}) => {\n  const [selectedProject, setSelectedProject] = useState('INBOX');\n\n  return ( <\n    SelectedProjectContext.Provider value = {\n      {\n        selectedProject,\n        setSelectedProject\n      }\n    } >\n    {\n      children\n    } <\n    /SelectedProjectContext.Provider>\n  );\n};\n\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\n\nSelectedProjectProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};"]},"metadata":{},"sourceType":"module"}