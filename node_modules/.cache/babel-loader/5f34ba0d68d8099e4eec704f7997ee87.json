{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Projects.js\";\nimport React, { useState } from 'react'; // import PropTypes from 'prop-types';\n\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject';\nexport const Projects = ({\n  activeValue = null\n}) => {\n  const [active, setActive] = useState(activeValue);\n  const {\n    setSelectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  return projects && projects.map(project => /*#__PURE__*/React.createElement(\"li\", {\n    key: project.projectId,\n    \"data-testid\": \"project-action-parent\",\n    \"data-doc-id\": project.docId,\n    className: active === project.projectId ? 'active sidebar__project' : 'sidebar__project',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    \"data-testid\": \"project-action\",\n    tabIndex: 0,\n    \"aria-label\": `Select ${project.name} as the task project`,\n    onClick: () => {\n      setActive(project.projectId);\n      setSelectedProject(project.projectId);\n    },\n    onKeyDown: e => {\n      if (e.key === 'Enter') {\n        setActive(project.projectId);\n        setSelectedProject(project.projectId);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IndividualProject, {\n    project: project,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n}; // start project ID in active\n// then active sidebar\n// else just put in sidebar","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Projects.js"],"names":["React","useState","useSelectedProjectValue","useProjectsValue","IndividualProject","Projects","activeValue","active","setActive","setSelectedProject","projects","map","project","projectId","docId","name","e","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,QAA0D,YAA1D;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,WAAW,GAAG;AAAhB,CAAD,KAA4B;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAACK,WAAD,CAApC;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAyBP,uBAAuB,EAAtD;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,gBAAgB,EAArC;AAGE,SACAO,QAAQ,IACRA,QAAQ,CAACC,GAAT,CAAcC,OAAD,iBACX;AACE,IAAA,GAAG,EAAEA,OAAO,CAACC,SADf;AAEE,mBAAY,uBAFd;AAGE,mBAAaD,OAAO,CAACE,KAHvB;AAIE,IAAA,SAAS,EACPP,MAAM,KAAKK,OAAO,CAACC,SAAnB,GACI,yBADJ,GAEI,kBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,mBAAY,gBAFd;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,kBAAa,UAASD,OAAO,CAACG,IAAK,sBAJrC;AAKE,IAAA,OAAO,EAAE,MAAM;AACbP,MAAAA,SAAS,CAACI,OAAO,CAACC,SAAT,CAAT;AACAJ,MAAAA,kBAAkB,CAACG,OAAO,CAACC,SAAT,CAAlB;AACD,KARH;AASE,IAAA,SAAS,EAAGG,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrBT,QAAAA,SAAS,CAACI,OAAO,CAACC,SAAT,CAAT;AACAJ,QAAAA,kBAAkB,CAACG,OAAO,CAACC,SAAT,CAAlB;AACD;AACF,KAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAgBE,oBAAC,iBAAD;AAAmB,IAAA,OAAO,EAAED,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAVF,CADF,CAFA;AAkCH,CAxCM,C,CA2CP;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\n// import PropTypes from 'prop-types';\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\nimport { IndividualProject } from './IndividualProject'; \n\nexport const Projects = ({ activeValue = null }) => {\n  const [active, setActive] = useState(activeValue);\n  const { setSelectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n\n\n    return (\n    projects &&\n    projects.map((project) => (\n      <li\n        key={project.projectId}\n        data-testid=\"project-action-parent\"\n        data-doc-id={project.docId}\n        className={\n          active === project.projectId\n            ? 'active sidebar__project'\n            : 'sidebar__project'\n        }\n      >\n        <div\n          role=\"button\"\n          data-testid=\"project-action\"\n          tabIndex={0}\n          aria-label={`Select ${project.name} as the task project`}\n          onClick={() => {\n            setActive(project.projectId);\n            setSelectedProject(project.projectId);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setActive(project.projectId);\n              setSelectedProject(project.projectId);\n            }\n          }}\n        >\n          <IndividualProject project={project} />\n        </div>\n      </li>\n    ))\n  );\n};\n\n\n// start project ID in active\n// then active sidebar\n// else just put in sidebar"]},"metadata":{},"sourceType":"module"}