{"ast":null,"code":"var _jsxFileName = \"/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Tasks.js\";\nimport React, { useEffect } from 'react';\nimport { Checkbox } from './Checkbox'; // import { AddTask } from './AddTask';\n\nimport { useTasks } from '../hooks'; // import { collatedTasks } from '../constants';\n// import { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\n// import { useSelectedProjectValue, useProjectsValue } from '../context';\n\nexport const Tasks = () => {\n  const {\n    selectedProject\n  } = useSelectedProjectValue();\n  const {\n    projects\n  } = useProjectsValue();\n  const {\n    tasks\n  } = useTasks(selectedProject);\n  let projectName = '';\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (projects && projects.length > 0 && selectedProject && !collatedTasksExist(selectedProject)) {\n    projectName = getTitle(projects, selectedProject).name;\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Todoist`;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tasks\",\n    \"data-testid\": \"tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"project-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, projectName), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tasks__list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, tasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n    key: `${task.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    id: task.id,\n    taskDesc: task.task,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, task.task)))), /*#__PURE__*/React.createElement(AddTask, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mang/Desktop/DEV/unit_5/project_5_final/andre_todolist/src/components/Tasks.js"],"names":["React","useEffect","Checkbox","useTasks","Tasks","selectedProject","useSelectedProjectValue","projects","useProjectsValue","tasks","projectName","collatedTasksExist","getCollatedTitle","collatedTasks","name","length","getTitle","document","title","map","task","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,YAAzB,C,CACA;;AACA,SAASC,QAAT,QAAyB,UAAzB,C,CACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAsBC,uBAAuB,EAAnD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeC,gBAAgB,EAArC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYN,QAAQ,CAACE,eAAD,CAA1B;AAEA,MAAIK,WAAW,GAAG,EAAlB;;AAEA,MAAIC,kBAAkB,CAACN,eAAD,CAAlB,IAAuCA,eAA3C,EAA4D;AAC1DK,IAAAA,WAAW,GAAGE,gBAAgB,CAACC,aAAD,EAAgBR,eAAhB,CAAhB,CAAiDS,IAA/D;AACD;;AAED,MACEP,QAAQ,IACRA,QAAQ,CAACQ,MAAT,GAAkB,CADlB,IAEAV,eAFA,IAGA,CAACM,kBAAkB,CAACN,eAAD,CAJrB,EAKE;AACAK,IAAAA,WAAW,GAAGM,QAAQ,CAACT,QAAD,EAAWF,eAAX,CAAR,CAAoCS,IAAlD;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,KAAT,GAAkB,GAAER,WAAY,WAAhC;AACD,GAFQ,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,mBAAY,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,mBAAY,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCA,WAAhC,CADF,eAGE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACT;AAAI,IAAA,GAAG,EAAG,GAAEA,IAAI,CAACC,EAAG,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAED,IAAI,CAACC,EAAnB;AAAuB,IAAA,QAAQ,EAAED,IAAI,CAACA,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,IAAI,CAACA,IAAZ,CAFF,CADD,CADH,CAHF,eAYE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD,CAxCM","sourcesContent":["import React, { useEffect } from 'react';\nimport { Checkbox } from './Checkbox';\n// import { AddTask } from './AddTask';\nimport { useTasks } from '../hooks';\n// import { collatedTasks } from '../constants';\n// import { getTitle, getCollatedTitle, collatedTasksExist } from '../helpers';\n// import { useSelectedProjectValue, useProjectsValue } from '../context';\n\nexport const Tasks = () => {\n  const { selectedProject } = useSelectedProjectValue();\n  const { projects } = useProjectsValue();\n  const { tasks } = useTasks(selectedProject);\n\n  let projectName = '';\n\n  if (collatedTasksExist(selectedProject) && selectedProject) {\n    projectName = getCollatedTitle(collatedTasks, selectedProject).name;\n  }\n\n  if (\n    projects &&\n    projects.length > 0 &&\n    selectedProject &&\n    !collatedTasksExist(selectedProject)\n  ) {\n    projectName = getTitle(projects, selectedProject).name;\n  }\n\n  useEffect(() => {\n    document.title = `${projectName}: Todoist`;\n  });\n\n  return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      <ul className=\"tasks__list\">\n        {tasks.map((task) => (\n          <li key={`${task.id}`}>\n            <Checkbox id={task.id} taskDesc={task.task} />\n            <span>{task.task}</span>\n          </li>\n        ))}\n      </ul>\n\n      <AddTask />\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}